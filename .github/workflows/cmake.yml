name: CMake
on: [push, pull_request, workflow_dispatch]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, macos-latest, ubuntu-latest]
        include:
          - os: windows-2019
          - os: macos-latest
          - os: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install Conan
        run: pip install conan pytest && conan --version
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.16.x'

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: sudo apt-get -qq update && sudo apt-get -qq install -y --no-install-recommends vim nano less g++-arm-linux-gnueabihf cmake

  # - name: Build CMake
      # run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Setting1
      run: mkdir build && cd build

    - name: Setting2
      run: conan install ..
      
    - name: Setting3
      run: cmake .. -DCMAKE_BUILD_TYPE=Release

    - name: Setting4
      run: cmake --build .
     
    - name: Setting5
      run: bin/sleep

    # - name: Build
      # # Build your program with the given configuration
      # run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

